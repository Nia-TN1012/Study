<Window x:Class="DailyReportMaker.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DailyReportMaker"
		xmlns:wtk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="{Binding AppInfo.ProductName}" x:Name="MainWindow1"
		ResizeMode="CanResizeWithGrip" WindowState="Maximized"
		Height="640" Width="960"
		Icon="/DailyReportMaker;component/DRMITA.ico">

	<Window.Resources>
		<!-- Converterクラスの登録 -->
		<local:BorderThicknessByWindowStateConverter x:Key="BorderThicknessByWindowStateConverterKey"/>
		<local:WindowBorderBrushConverter x:Key="WindowBorderBrushConverterKey"/>
		<local:CaptionBarBackgroundConverter x:Key="CaptionBarBackgroundConverterKey"/>
		<local:MaximizeCaptionButtonContentConverter x:Key="MaximizeCaptionButtonContentConverterKey"/>
		<local:MaximizeCaptionButtonTooltipConverter x:Key="MaximizeCaptionButtonTooltipConverter"/>
		<local:MaximizeCaptionButtonEnableConverter x:Key="MaximizeCaptionButtonEnableConverterKey"/>
		<local:ResizeCaptionButtonVisibilityConverter x:Key="ResizeCaptionButtonVisibilityConverterKey"/>
		<local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverterKey"/>
		<local:BoolToNullableBoolConverter x:Key="BoolToNullableBoolConverterKey"/>

		<!-- キャプションボタンのスタイル -->
		<Style x:Key="CustomCaptionButtonKey" TargetType="{x:Type Button}" 
			   BasedOn="{StaticResource CustomCaptionButtonKey}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Foreground" Value="{StaticResource MainWindowForegroundKey}"/>
			<Setter Property="Height" Value="30"/>
			<Setter Property="Width" Value="40"/>
			<Setter Property="FontSize" Value="14"/>
		</Style>

		<!-- キャプション以外のボタン用 -->
		<Style TargetType="{x:Type Button}" BasedOn="{StaticResource CustomButtonKey}">
			<Setter Property="Background" Value="{StaticResource MainWindowBackgroundKey}"/>
			<Setter Property="Foreground" Value="{StaticResource MainWindowForegroundKey}"/>
			<Setter Property="FontSize" Value="14"/>
		</Style>

		<!-- 項目の上下移動・削除ボタン用 -->
		<Style x:Key="CustomButton2Key" TargetType="{x:Type Button}" 
			   BasedOn="{StaticResource CustomButton2Key}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Foreground" Value="{StaticResource MainWindowForegroundKey}"/>
			<Setter Property="Height" Value="30"/>
			<Setter Property="Width" Value="30"/>
			<Setter Property="FontSize" Value="14"/>
		</Style>

		<!-- テキストブロック用 -->
		<Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CustomTextBlockKey}">
			<Setter Property="FontSize" Value="12"/>
		</Style>

		<!-- ラベル用 -->
		<Style TargetType="{x:Type Label}" BasedOn="{StaticResource CustomLabelKey}">
			<Setter Property="FontSize" Value="12"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
		</Style>

		<!-- テキストボックス用 -->
		<Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource CustomTextBoxKey}">
			<Setter Property="Height" Value="Auto"/>
			<Setter Property="FontSize" Value="14"/>
		</Style>

		<Style x:Key="TextBoxInItemKey" TargetType="{x:Type TextBox}" BasedOn="{StaticResource CustomTextBoxKey}">
			<Setter Property="Height" Value="Auto"/>
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="AcceptsReturn" Value="True"/>
			<Setter Property="MaxHeight" Value="64"/>
		</Style>

		<!-- コンボボックス用 -->
		<Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource CustomComboBoxKey}">
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="IsEditable" Value="False"/>
		</Style>

		<!-- コンボボックスのアイテム用 -->
		<Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource CustomComboBoxItemKey}">
			<Setter Property="Padding" Value="5"/>
			<Setter Property="FontSize" Value="14"/>
		</Style>

		<!-- リストボックス用 -->
		<Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource CustomListBoxKey}">
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
		</Style>

		<!-- リストボックスのアイテム用 -->
		<Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource CustomListBoxItem2Key}">
			<Setter Property="Margin" Value="5"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="1,1,2,2"/>
			<Setter Property="BorderBrush" Value="LightGray"/>
			<Setter Property="FontSize" Value="14"/>
		</Style>

		<!-- チェックボックス用 -->
		<Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource CustomCheckBoxKey}">
			<Setter Property="FontSize" Value="14"/>
		</Style>

		<!-- 日付ピッカー用 -->
		<Style TargetType="{x:Type DatePicker}">
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		</Style>

		<!-- タイムピッカー用 -->
		<Style TargetType="wtk:TimePicker">
			<Setter Property="FormatString" Value="H:mm"/>
			<Setter Property="TimeInterval" Value="0:30:0"/>
			<Setter Property="StartTime" Value="8:00:00"/>
			<Setter Property="EndTime" Value="20:00:00"/>
			<Setter Property="TextAlignment" Value="Center"/>
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="UpdateValueOnEnterKey" Value="True"/>
		</Style>

		<!-- アップダウン用 -->
		<Style TargetType="wtk:ByteUpDown">
			<Setter Property="FontSize" Value="14"/>
		</Style>

		<!-- タブコントロール用 -->
		<Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource CustomTabControlKey}">
			<Setter Property="Background" Value="Transparent"/>
		</Style>

		<!-- タブの項目用 -->
		<Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource CustomTabItemKey}">
			<Setter Property="Height" Value="30"/>
			<Setter Property="FontSize" Value="12"/>
		</Style>

	</Window.Resources>

	<Window.DataContext>
		<local:MainViewModel ComfirmAction="MainViewModel_ComfirmAction"
							 LoadDRMInputFileAction="MainViewModel_LoadDRMInputFileAction"
							 SaveDRMInputFileAction="MainViewModel_SaveDRMInputFileAction"
							 SaveDRAction="MainViewModel_SaveDRAction"/>
	</Window.DataContext>

	<Window.CommandBindings>
		<CommandBinding Command="{x:Static SystemCommands.CloseWindowCommand}"
                        Executed="CloseWindow"/>
		<CommandBinding Command="{x:Static SystemCommands.MaximizeWindowCommand}"
                        Executed="MaximizeOrRestoreWindow"/>
		<CommandBinding Command="{x:Static SystemCommands.MinimizeWindowCommand}"
                        Executed="MinimizeWindow"/>
	</Window.CommandBindings>

	<WindowChrome.WindowChrome>
		<WindowChrome CaptionHeight="30"
		      ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
		      GlassFrameThickness="0,0,0,1"/>
	</WindowChrome.WindowChrome>

	<Border BorderThickness="{Binding WindowState, Converter={StaticResource BorderThicknessByWindowStateConverterKey},
		             ElementName=MainWindow1}"
			BorderBrush="{Binding IsActive, Converter={StaticResource WindowBorderBrushConverterKey},
				     ConverterParameter={StaticResource MainWindowBorderBrushKey}, ElementName=MainWindow1}">
		<Grid>
			<!-- 上からタイトルバー、コンテンツ -->
			<Grid.RowDefinitions>
				<RowDefinition Height="30"/>
				<RowDefinition Height="*"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>

			<!-- タイトルバー -->
			<Grid Grid.Row="0"
				  Background="{Binding IsActive, Converter={StaticResource CaptionBarBackgroundConverterKey},
										ConverterParameter={StaticResource MainWindowBorderBrushKey}, ElementName=MainWindow1}">

				<!-- 左からアイコン、タイトル、コマンドボタン -->
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>

				<!-- アイコンを表示します -->
				<Image Grid.Column="0"
					   Margin="5"
					   Source="{Binding Icon, ElementName=MainWindow1}"/>

				<!-- ウィンドウタイトルを表示します -->
				<Grid Grid.Column="1">
					<StackPanel HorizontalAlignment="Left"
								VerticalAlignment="Center">
						<TextBlock Text="{Binding Title, ElementName=MainWindow1}"
								   Foreground="Black"
								   Padding="5,0"/>
					</StackPanel>
				</Grid>

				<!-- 最小化、最大化、閉じるボタンを設置します -->
				<Grid Grid.Column="2">
					<StackPanel Orientation="Horizontal"
								HorizontalAlignment="Right"
								VerticalAlignment="Center">
						<!-- 最小化ボタン -->
						<Button Content="0"
								Style="{StaticResource CustomCaptionButtonKey}"
								Visibility="{Binding ResizeMode, Converter={StaticResource ResizeCaptionButtonVisibilityConverterKey}, ElementName=MainWindow1}"
								ToolTip="最小化"
								Command="{x:Static SystemCommands.MinimizeWindowCommand}" />
						<!-- 最大化ボタン -->
						<Button Content="{Binding WindowState,Converter={StaticResource MaximizeCaptionButtonContentConverterKey}, ElementName=MainWindow1}"
								Style="{StaticResource CustomCaptionButtonKey}"
								IsEnabled="{Binding ResizeMode, Converter={StaticResource MaximizeCaptionButtonEnableConverterKey}, ElementName=MainWindow1}"
								Visibility="{Binding ResizeMode, Converter={StaticResource ResizeCaptionButtonVisibilityConverterKey}, ElementName=MainWindow1}"
								ToolTip="{Binding WindowState, Converter={StaticResource MaximizeCaptionButtonTooltipConverter}, ElementName=MainWindow1}"
								Command="{x:Static SystemCommands.MaximizeWindowCommand}"/>
						<!-- 閉じるボタン -->
						<Button Content="r"
								Style="{StaticResource CustomCaptionButtonKey}"
								ToolTip="閉じる"
								Command="{x:Static SystemCommands.CloseWindowCommand}"/>
					</StackPanel>
				</Grid>

			</Grid>

			<!-- コンテンツ -->
			<TabControl Grid.Row="1" Margin="4"
						SelectedIndex="0">

				<!-- 入力フォーム ここから -->

				<!-- TA情報の入力フォーム -->
				<TabItem Header="TA情報(_I)">
					<Grid>

						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="20"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>

						<Grid Grid.Row="0">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>

							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>

							<!-- 日付の入力 -->
							<Label Grid.Row="0" Grid.Column="0"
								   Margin="5" Padding="5,0" MinWidth="100"
								   Content="日付"/>

							<DockPanel Grid.Row="0" Grid.Column="1">
								<!-- 日付の入力 -->
								<DatePicker Margin="5" Padding="5,0"
											HorizontalAlignment="Left" MinWidth="200"
											Text="{Binding Date, Mode=TwoWay}"/>
								<Button DockPanel.Dock="Left" Margin="5" Padding="5,0" MinWidth="80"
										Content="今日"
										Command="{Binding SetTodayCommand}"/>

								<!-- 教室番号 -->
								<Label DockPanel.Dock="Left" Margin="5" Padding="5,0"
									   MinWidth="100"
									   Content="教室番号"/>
								<!-- 既知の教室番号をコンボボックスから選択できるようにしています。 -->
								<ComboBox DockPanel.Dock="Right" Margin="5" Padding="5,0"
										  ItemsSource="{Binding RoomNameList}"
										  IsEditable="True" Text="{Binding RoomName}">
									<ComboBox.ItemTemplate>
										<DataTemplate>
											<ComboBoxItem Content="{Binding Num}" ToolTip="{Binding FullName}"/>
										</DataTemplate>
									</ComboBox.ItemTemplate>
								</ComboBox>


							</DockPanel>

							<!-- TAの氏名の入力 -->
							<Label Grid.Row="1" Grid.Column="0"
								   Margin="5" Padding="5,0" MinWidth="100"
								   Content="TA 氏名"/>
							<TextBox Grid.Row="1" Grid.Column="1" Margin="5" Padding="5,0"
									 Text="{Binding TAName}"/>

							<!-- 勤務時間の入力 -->
							<Label Grid.Row="2" Grid.Column="0" Margin="5" Padding="5, 0"
								   Content="勤務時間"/>

							<StackPanel Grid.Row="2" Grid.Column="1"
										Orientation="Horizontal">

								<!-- 勤務開始時刻 -->
								<wtk:TimePicker Margin="5" Padding="5, 0" MinWidth="100"
												Text="{Binding Value, RelativeSource={RelativeSource Self}}" Value="{Binding WorkStartTime}"/>

								<Label Margin="5" Padding="5, 0"
									   Content="～"/>

								<!-- 勤務終了時刻 -->
								<wtk:TimePicker Margin="5" Padding="5, 0" MinWidth="100"
												Text="{Binding Value, RelativeSource={RelativeSource Self}}" Value="{Binding WorkEndTime}"/>

							</StackPanel>

							<Label Grid.Row="3" Grid.Column="0"  Margin="5" Padding="5, 0"
								   Content="勤怠の詳細情報・備考"/>

							<TextBox Grid.Row="3" Grid.Column="1" Margin="5" Padding="5,0"
									 AcceptsReturn="True" Height="120"
									 VerticalScrollBarVisibility="Auto"
									 TextWrapping="Wrap"
									 Text="{Binding Description}"/>

						</Grid>

						<StackPanel Grid.Row="2" Margin="20,10"
									Orientation="Horizontal"
									MinHeight="50">

							<Button Grid.Row="0" Margin="5" Padding="5,0"
									MinWidth="240"
									Content="日報データファイル読み込み(_L)"
									ToolTip="保存済みの日報データファイルを読み込み、フォームに入力します。"
									Command="{Binding LoadDRDataFileCommand}"/>

							<Button Grid.Row="1" Margin="5" Padding="5,0"
									MinWidth="240"
									Content="日報データファイルの保存(_S)"
									ToolTip="現在の入力内容を日報データファイルに保存します。"
									Command="{Binding SaveDRDataFileCommand}"/>

							<Button Grid.Row="2" Margin="5" Padding="5,0"
									MinWidth="240"
									Content="入力フォームの内容をクリア(_C)"
									ToolTip="フォームに入力した日報データをすべてクリアします。"
									Command="{Binding ClearInputFormDataCommand}"/>

						</StackPanel>

						<StackPanel Grid.Row="3" Margin="20,10"
									Orientation="Horizontal"
									MinHeight="50">

							<Button Grid.Row="0" Margin="5" Padding="5,0"
									MinWidth="240"
									Content="一時データファイルの読み込み"
									ToolTip="一時データファイル（temp.drmitatmp）を読み込み、フォームに入力します。"
									Command="{Binding LoadDRTempCommand}"/>

							<Button Grid.Row="1" Margin="5" Padding="5,0"
									MinWidth="240"
									Content="一時データファイルに保存"
									ToolTip="現在の入力内容を一時データファイル（temp.drmitatmp）に保存します。"
									Command="{Binding SaveDRTempCommand}"/>

						</StackPanel>
					</Grid>
				</TabItem>

				<!-- 業務概要の入力フォーム -->
				<TabItem Header="業務概要(_T)">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
							<RowDefinition Height="100"/>
						</Grid.RowDefinitions>

						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>

						<!-- 業務概要の概要のリスト -->
						<ListBox Grid.Row="0" Grid.Column="0" Margin="5"
								 HorizontalContentAlignment="Stretch"
								 ItemsSource="{Binding WorkingOverviewList}"
								 SelectedIndex="{Binding WorkingOverviewListIndex}">
							<ListBox.ItemTemplate>
								<DataTemplate>
									<Grid Margin="12,4,4,4">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*"/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>

										<Grid Grid.Column="0" VerticalAlignment="Top">
											<Grid.RowDefinitions>
												<RowDefinition Height="1*"/>
												<RowDefinition Height="1*"/>
												<RowDefinition Height="1*"/>
											</Grid.RowDefinitions>

											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto"/>
												<ColumnDefinition Width="*"/>
												<ColumnDefinition Width="Auto"/>
											</Grid.ColumnDefinitions>

											<!-- 業務概要の項目の対象時間の入力 -->
											<StackPanel Grid.Row="0" Grid.ColumnSpan="2"
														Orientation="Horizontal">

												<Label Margin="5" Padding="5, 0" MinWidth="100"
													   Content="時間"/>

												<!-- 開始時刻 -->
												<wtk:TimePicker Margin="5" Padding="5, 0" MinWidth="100"
																Text="{Binding Value, RelativeSource={RelativeSource Self}}" Value="{Binding StartTime}"/>

												<Label Margin="5" Padding="5, 0"
													   Content="～"/>

												<!-- 終了時刻 -->
												<wtk:TimePicker Margin="5" Padding="5, 0" MinWidth="100"
																Text="{Binding Value, RelativeSource={RelativeSource Self}}" Value="{Binding EndTime}"/>

											</StackPanel>

											<!-- 業務内容の入力 -->
											<Label Grid.Row="1" Grid.Column="0" Margin="5" MinWidth="100"
												   Content="業務内容"/>

											<TextBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Margin="5"
													 Text="{Binding Description}"/>

											<!-- 備考の入力 -->
											<Label Grid.Row="2" Grid.Column="0" Margin="5" MinWidth="100"
												   Content="備考"/>

											<TextBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="5"
													 Text="{Binding Remarks}"/>
										</Grid>

										<StackPanel Grid.Column="1" Margin="5,0,0,0">
											<Button Style="{StaticResource CustomButton2Key}"
													Content="r"
													ToolTip="この項目を削除します。"
													Command="{Binding DataContext.DeleteWorkingOverviewItemCommand, ElementName=MainWindow1}"/>
											<Button Style="{StaticResource CustomButton2Key}"
													Content="t"
													ToolTip="この項目を1つ上に移動します。"
													Command="{Binding DataContext.MoveUpWorkingOverviewItemCommand, ElementName=MainWindow1}"/>
											<Button Style="{StaticResource CustomButton2Key}"
													Content="u"
													ToolTip="この項目を1つ下に移動します。"
													Command="{Binding DataContext.MoveDownWorkingOverviewItemCommand, ElementName=MainWindow1}"/>
										</StackPanel>

									</Grid>
								</DataTemplate>
							</ListBox.ItemTemplate>
						</ListBox>

						<StackPanel Grid.Row="0" Grid.Column="1"
									MinWidth="120">
							<Button Grid.Row="0" Margin="5" Padding="5,0"
									Height="50"
									Content="追加(_A)"
									ToolTip="業務概要の項目を追加します。"
									Command="{Binding AddWorkingOverviewItemCommand}"/>

							<Button Grid.Row="2" Margin="5" Padding="5,0"
									Height="50"
									Content="クリア(_C)"
									ToolTip="選択した業務概要の項目を削除します。"
									Command="{Binding ClearWorkingOverviewListCommand}"/>
							<Button Grid.Row="2" Margin="5" Padding="5,0"
									Height="50"
									Content="開始時間順に並べ替え(_S)"
									ToolTip="業務概要の項目を開始時間順に並べ替えます。"
									Command="{Binding SortWorkingOverviewItemByStartTimeCommand}"/>
						</StackPanel>

						<Grid Grid.Row="1" Grid.ColumnSpan="2">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>

							<Label Grid.Row="0" Margin="5" Padding="5,0" MinWidth="100"
								   HorizontalContentAlignment="Left"
								   Content="利用者の状況"/>

							<TextBox Grid.Row="1" Margin="5" Padding="5"
									 AcceptsReturn="True"
									 VerticalScrollBarVisibility="Auto"
									 TextWrapping="Wrap"
									 Text="{Binding AboutUser}"/>
						</Grid>

					</Grid>
				</TabItem>

				<!-- 学生からの質問 -->
				<TabItem Header="質問(_Q)">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>

						<ListBox Grid.Column="0" Margin="5"
								 HorizontalContentAlignment="Stretch"
								 ItemsSource="{Binding QuestionList}"
								 SelectedIndex="{Binding QuestionListIndex}">
							<ListBox.ItemTemplate>
								<DataTemplate>
									<Grid Margin="12,4,4,4">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*"/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>

										<Grid Grid.Column="0" VerticalAlignment="Top">
											<Grid.RowDefinitions>
												<RowDefinition Height="1*"/>
												<RowDefinition Height="1*"/>
												<RowDefinition Height="1*"/>
											</Grid.RowDefinitions>

											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto"/>
												<ColumnDefinition Width="*"/>
											</Grid.ColumnDefinitions>

											<Label Grid.Row="0" Grid.Column="0" Margin="5" Padding="5, 0" MinWidth="100"
												   Content="質問時刻"/>

											<wtk:TimePicker Grid.Row="0" Grid.Column="1" Margin="5" Padding="5, 0"
															HorizontalAlignment="Left"
															MinWidth="100"
															Text="{Binding Value, RelativeSource={RelativeSource Self}}" Value="{Binding QuestionTime}"/>

											<Label Grid.Row="1" Grid.Column="0" Margin="5" MinWidth="100"
												   Content="質問内容"/>

											<TextBox Grid.Row="1" Grid.Column="1" Margin="5"
													 Style="{StaticResource TextBoxInItemKey}"
													 Text="{Binding Question}"/>

											<Label Grid.Row="2" Grid.Column="0" Margin="5" MinWidth="100"
												   Content="解決方法"/>

											<TextBox Grid.Row="2" Grid.Column="1" Margin="5"
													 Style="{StaticResource TextBoxInItemKey}"
													 Text="{Binding Answer}"/>
										</Grid>

										<StackPanel Grid.Column="1" Margin="5,0,0,0">
											<Button Style="{StaticResource CustomButton2Key}"
													Content="r"
													ToolTip="この項目を削除します。"
													Command="{Binding DataContext.DeleteQuestionItemCommand, ElementName=MainWindow1}"/>
											<Button Style="{StaticResource CustomButton2Key}"
													Content="t"
													ToolTip="この項目を1つ上に移動します。"
													Command="{Binding DataContext.MoveUpQuestionItemCommand, ElementName=MainWindow1}"/>
											<Button Style="{StaticResource CustomButton2Key}"
													Content="u"
													ToolTip="この項目を1つ下に移動します。"
													Command="{Binding DataContext.MoveDownQuestionItemCommand, ElementName=MainWindow1}"/>
										</StackPanel>

									</Grid>
								</DataTemplate>
							</ListBox.ItemTemplate>
						</ListBox>

						<StackPanel Grid.Row="0" Grid.Column="1"
									MinWidth="120">
							<Button Grid.Row="0" Margin="5" Padding="5,0"
									Height="50"
									Content="追加(_A)"
									Command="{Binding AddQuestionItemCommand}"/>

							<Button Grid.Row="2" Margin="5" Padding="5,0"
									Height="50"
									Content="クリア(_C)"
									Command="{Binding ClearQuestionListCommand}"/>
							<Button Grid.Row="2" Margin="5" Padding="5,0"
									Height="50"
									Content="時間順に並べ替え(_S)"
									ToolTip="質問の項目を時間順に並べ替えます。"
									Command="{Binding SortQuestionItemByTimeCommand}"/>
						</StackPanel>
					</Grid>
				</TabItem>

				<!-- PC・アプリなどのトラブル -->
				<TabItem Header="機器・アプリのトラブル(_F)">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>

						<ListBox Grid.Column="0" Margin="5"
								 HorizontalContentAlignment="Stretch"
								 ItemsSource="{Binding FailureInfoList}"
								 SelectedIndex="{Binding FailureInfoListIndex}">
							<ListBox.ItemTemplate>
								<DataTemplate>
									<Grid Margin="12,4,4,4">

										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*"/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>

										<Grid Grid.Column="0" VerticalAlignment="Top">
											<Grid.RowDefinitions>
												<RowDefinition Height="1*"/>
												<RowDefinition Height="1*"/>
											</Grid.RowDefinitions>

											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto"/>
												<ColumnDefinition Width="*"/>
											</Grid.ColumnDefinitions>

											<Label Grid.Row="0" Grid.Column="0" Margin="5" Padding="5, 0"
												   Content="発生時刻"/>

											<DockPanel Grid.Row="0" Grid.Column="1">

												<wtk:TimePicker DockPanel.Dock="Left" Margin="5" Padding="5, 0"
																MinWidth="100"
																Text="{Binding Value, RelativeSource={RelativeSource Self}}" Value="{Binding OccuredTime}"/>

												<ComboBox DockPanel.Dock="Left" Margin="5"
														  MinWidth="160"
														  IsEditable="True" Text="{Binding TypeName}"
														  ItemsSource="{Binding DataContext.FixtureTypeList, ElementName=MainWindow1}">
												</ComboBox>

												<TextBox DockPanel.Dock="Right" Margin="5"
														 Text="{Binding Name}"/>

											</DockPanel>

											<Label Grid.Row="1" Grid.Column="0" Margin="5" MinWidth="100"
												   Content="詳細情報"/>

											<TextBox Grid.Row="1" Grid.Column="1" Margin="5"
													 Style="{StaticResource TextBoxInItemKey}"
													 Text="{Binding Description}"/>

										</Grid>

										<StackPanel Grid.Column="1" Margin="5,0,0,0">
											<Button Style="{StaticResource CustomButton2Key}"
													Content="r"
													ToolTip="この項目を削除します。"
													Command="{Binding DataContext.DeleteFailureInfoItemCommand, ElementName=MainWindow1}"/>
											<Button Style="{StaticResource CustomButton2Key}"
													Content="t"
													ToolTip="この項目を1つ上に移動します。"
													Command="{Binding DataContext.MoveUpFailureInfoItemCommand, ElementName=MainWindow1}"/>
											<Button Style="{StaticResource CustomButton2Key}"
													Content="u"
													ToolTip="この項目を1つ下に移動します。"
													Command="{Binding DataContext.MoveDownFailureInfoItemCommand, ElementName=MainWindow1}"/>
										</StackPanel>

									</Grid>
								</DataTemplate>
							</ListBox.ItemTemplate>
						</ListBox>

						<StackPanel Grid.Row="0" Grid.Column="1"
									MinWidth="120">
							<Button Grid.Row="0" Margin="5" Padding="5,0"
									Height="50"
									Content="追加(_A)"
									Command="{Binding AddFailureInfoItemCommand}"/>

							<Button Grid.Row="2" Margin="5" Padding="5,0"
									Height="50"
									Content="クリア(_C)"
									Command="{Binding ClearFailureInfoListCommand}"/>
							<Button Grid.Row="2" Margin="5" Padding="5,0"
									Height="50"
									Content="時間順に並べ替え(_S)"
									ToolTip="機器・アプリのトラブルの項目を時間順に並べ替えます。"
									Command="{Binding SortFailureInfoItemByTimeCommand}"/>
						</StackPanel>
					</Grid>
				</TabItem>

				<!-- 不正印刷 -->
				<TabItem Header="不正印刷(_P)">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>

						<ListBox Grid.Column="0" Margin="5"
								 HorizontalContentAlignment="Stretch"
								 ItemsSource="{Binding InjusticePrintList}"
								 SelectedIndex="{Binding InjusticePrintListIndex}">
							<ListBox.ItemTemplate>
								<DataTemplate>
									<Grid Margin="12,4,4,4">

										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*"/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>

										<Grid Grid.Column="0">

											<Grid.RowDefinitions>
												<RowDefinition Height="1*"/>
												<RowDefinition Height="1*"/>
												<RowDefinition Height="1*"/>
											</Grid.RowDefinitions>

											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto"/>
												<ColumnDefinition Width="*"/>
											</Grid.ColumnDefinitions>

											<Label Grid.Row="0" Grid.Column="0" Margin="5" Padding="5, 0" MinWidth="100"
												   Content="発見時刻"/>

											<DockPanel Grid.Row="0" Grid.Column="1">

												<wtk:TimePicker DockPanel.Dock="Left" Margin="5" Padding="5, 0"
																MinWidth="100"
																Text="{Binding Value, RelativeSource={RelativeSource Self}}" Value="{Binding FoundTime}"/>

												<Label DockPanel.Dock="Left" Margin="5" Padding="5, 0" MinWidth="100"
													   Content="ユーザー名"/>

												<TextBox DockPanel.Dock="Right" Margin="5"
														 Text="{Binding User}"/>

											</DockPanel>

											<Label Grid.Row="1" Grid.Column="0" Margin="5" MinWidth="100"
												   Content="ファイル名"/>

											<TextBox Grid.Row="1" Grid.Column="1" Margin="5"
													 Text="{Binding FileName}"/>

											<Label Grid.Row="2" Grid.Column="0" Margin="5" MinWidth="100"
												   Content="詳細情報"/>

											<TextBox Grid.Row="2" Grid.Column="1" Margin="5"
													 Style="{StaticResource TextBoxInItemKey}"
													 Text="{Binding Description}"/>
										</Grid>

										<StackPanel Grid.Column="1" Margin="5,0,0,0">
											<Button Style="{StaticResource CustomButton2Key}"
													Content="r"
													ToolTip="この項目を削除します。"
													Command="{Binding DataContext.DeleteInjusticePrintItemCommand, ElementName=MainWindow1}"/>
											<Button Style="{StaticResource CustomButton2Key}"
													Content="t"
													ToolTip="この項目を1つ上に移動します。"
													Command="{Binding DataContext.MoveUpInjusticePrintItemCommand, ElementName=MainWindow1}"/>
											<Button Style="{StaticResource CustomButton2Key}"
													Content="u"
													ToolTip="この項目を1つ下に移動します。"
													Command="{Binding DataContext.MoveDownInjusticePrintItemCommand, ElementName=MainWindow1}"/>
										</StackPanel>
									</Grid>
								</DataTemplate>
							</ListBox.ItemTemplate>
						</ListBox>

						<StackPanel Grid.Row="0" Grid.Column="1"
									MinWidth="120">
							<Button Grid.Row="0" Margin="5" Padding="5,0"
									Height="50"
									Content="追加(_A)"
									Command="{Binding AddInjusticePrintItemCommand}"/>

							<Button Grid.Row="2" Margin="5" Padding="5,0"
									Height="50"
									Content="クリア(_C)"
									Command="{Binding ClearInjusticePrintListCommand}"/>
							<Button Grid.Row="2" Margin="5" Padding="5,0"
									Height="50"
									Content="時間順に並べ替え(_S)"
									ToolTip="不正印刷情報の項目を時間順に並べ替えます。"
									Command="{Binding SortInjusticePrintItemByTimeCommand}"/>
						</StackPanel>
					</Grid>
				</TabItem>

				<!-- 2重ログイン -->
				<TabItem Header="2重ログイン(_L)">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>

						<ListBox Grid.Column="0" Margin="5"
								 HorizontalContentAlignment="Stretch"
								 ItemsSource="{Binding DuplicateLoginList}"
								 SelectedIndex="{Binding DuplicateLoginListIndex}">
							<ListBox.ItemTemplate>
								<DataTemplate>
									<Grid Margin="12,4,4,4">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*"/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>

										<Grid Grid.Column="0" VerticalAlignment="Top">
											<Grid.RowDefinitions>
												<RowDefinition Height="1*"/>
												<RowDefinition Height="1*"/>
											</Grid.RowDefinitions>

											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto"/>
												<ColumnDefinition Width="*"/>
											</Grid.ColumnDefinitions>

											<Label Grid.Row="0" Grid.Column="0" Margin="5" Padding="5, 0" MinWidth="100"
												   Content="発見時刻"/>

											<DockPanel Grid.Row="0" Grid.Column="1">

												<wtk:TimePicker DockPanel.Dock="Left" Margin="5" Padding="5, 0"
																MinWidth="100"
																Text="{Binding Value, RelativeSource={RelativeSource Self}}" Value="{Binding FoundTime}"/>

												<Label DockPanel.Dock="Left" Margin="5" Padding="5, 0" MinWidth="100"
													   Content="ユーザー名"/>

												<TextBox DockPanel.Dock="Right" Margin="5"
														 Text="{Binding User}"/>
											</DockPanel>

											<Label Grid.Row="1" Grid.Column="0" Margin="5" MinWidth="100"
												   Content="詳細情報"/>

											<TextBox Grid.Row="1" Grid.Column="1" Margin="5"
													 Style="{StaticResource TextBoxInItemKey}"
													 Text="{Binding Description}"/>
										</Grid>

										<StackPanel Grid.Column="1" Margin="5,0,0,0">
											<Button Style="{StaticResource CustomButton2Key}"
													Content="r"
													ToolTip="この項目を削除します。"
													Command="{Binding DataContext.DeleteDuplicateLoginItemCommand, ElementName=MainWindow1}"/>
											<Button Style="{StaticResource CustomButton2Key}"
													Content="t"
													ToolTip="この項目を1つ上に移動します。"
													Command="{Binding DataContext.MoveUpDuplicateLoginItemCommand, ElementName=MainWindow1}"/>
											<Button Style="{StaticResource CustomButton2Key}"
													Content="u"
													ToolTip="この項目を1つ下に移動します。"
													Command="{Binding DataContext.MoveDownDuplicateLoginItemCommand, ElementName=MainWindow1}"/>
										</StackPanel>
									</Grid>
								</DataTemplate>
							</ListBox.ItemTemplate>
						</ListBox>

						<StackPanel Grid.Row="0" Grid.Column="1"
									MinWidth="120">
							<Button Grid.Row="0" Margin="5" Padding="5,0"
									Height="50"
									Content="追加(_A)"
									Command="{Binding AddDuplicateLoginItemCommand}"/>
							<Button Grid.Row="2" Margin="5" Padding="5,0"
									Height="50"
									Content="クリア(_C)"
									Command="{Binding ClearDuplicateLoginListCommand}"/>
							<Button Grid.Row="2" Margin="5" Padding="5,0"
									Height="50"
									Content="時間順に並べ替え(_S)"
									ToolTip="2重ログイン情報の項目を時間順に並べ替えます。"
									Command="{Binding SortDuplicateLoginItemByTimeCommand}"/>
						</StackPanel>
					</Grid>
				</TabItem>

				<!-- その他の注意事項 -->
				<TabItem Header="その他の注意(_W)">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>

						<ListBox Grid.Column="0" Margin="5"
								 HorizontalContentAlignment="Stretch"
								 ItemsSource="{Binding OtherMatterList}"
								 SelectedIndex="{Binding OtherMatterListIndex}">
							<ListBox.ItemTemplate>
								<DataTemplate>
									<Grid Margin="12,4,4,4">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*"/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>

										<Grid Grid.Column="0" VerticalAlignment="Top">
											<Grid.RowDefinitions>
												<RowDefinition Height="Auto"/>
												<RowDefinition Height="Auto"/>
											</Grid.RowDefinitions>

											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto"/>
												<ColumnDefinition Width="*"/>
											</Grid.ColumnDefinitions>

											<Label Grid.Row="0" Grid.Column="0" Margin="5" Padding="5,0" MinWidth="100"
												   Content="内容"/>

											<TextBox Grid.Row="0" Grid.Column="1" Margin="5"
													 Text="{Binding Description}"/>

											<Label Grid.Row="1" Grid.Column="0" Margin="5" Padding="5,0" MinWidth="100"
												   Content="人数"/>

											<wtk:ByteUpDown Grid.Row="1" Grid.Column="1" Margin="5" Padding="5,0" MinWidth="100"
															HorizontalAlignment="Left"
															DefaultValue="0" Text="{Binding Num}"/>
										</Grid>

										<StackPanel Grid.Column="1" Margin="5,0,0,0">
											<Button Style="{StaticResource CustomButton2Key}"
													Content="r"
													ToolTip="この項目を削除します。"
													Command="{Binding DataContext.DeleteOtherMatterItemCommand, ElementName=MainWindow1}"/>
											<Button Style="{StaticResource CustomButton2Key}"
													Content="t"
													ToolTip="この項目を1つ上に移動します。"
													Command="{Binding DataContext.MoveUpOtherMatterItemCommand, ElementName=MainWindow1}"/>
											<Button Style="{StaticResource CustomButton2Key}"
													Content="u"
													ToolTip="この項目を1つ下に移動します。"
													Command="{Binding DataContext.MoveDownOtherMatterItemCommand, ElementName=MainWindow1}"/>
										</StackPanel>
									</Grid>
								</DataTemplate>
							</ListBox.ItemTemplate>
						</ListBox>

						<StackPanel Grid.Row="0" Grid.Column="1"
									MinWidth="120">
							<Button Grid.Row="0" Margin="5" Padding="5,0"
									Height="50"
									Content="追加(_A)"
									Command="{Binding AddOtherMatterItemCommand}"/>
							<Button Grid.Row="2" Margin="5" Padding="5,0"
									Height="50"
									Content="クリア(_C)"
									Command="{Binding ClearOtherMatterListCommand}"/>
						</StackPanel>
					</Grid>
				</TabItem>

				<!-- 遺失物 -->
				<TabItem Header="遺失物(_O)">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>

						<ListBox Grid.Column="0" Margin="5"
								 HorizontalContentAlignment="Stretch"
								 ItemsSource="{Binding LostSumthingList}"
								 SelectedIndex="{Binding LostSumthingListIndex}">
							<ListBox.ItemTemplate>
								<DataTemplate>
									<Grid Margin="12,4,4,4">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*"/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>

										<Grid Grid.Column="0" VerticalAlignment="Top">
											<Grid.RowDefinitions>
												<RowDefinition Height="Auto"/>
												<RowDefinition Height="Auto"/>
												<RowDefinition Height="Auto"/>
											</Grid.RowDefinitions>

											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto"/>
												<ColumnDefinition Width="*"/>
											</Grid.ColumnDefinitions>

											<Label Grid.Row="0" Grid.Column="0" Margin="5" Padding="5, 0" MinWidth="100"
												   Content="発見時刻"/>

											<DockPanel Grid.Row="0" Grid.Column="1">
												<wtk:TimePicker DockPanel.Dock="Left" Margin="5" Padding="5, 0"
																MinWidth="100"
																Text="{Binding Value, RelativeSource={RelativeSource Self}}" Value="{Binding FoundTime}"/>

												<Label DockPanel.Dock="Left" Margin="5" Padding="5, 0" MinWidth="100"
													   Content="発見場所"/>

												<TextBox DockPanel.Dock="Right" Margin="5"
														 Text="{Binding FoundPlace}"/>
											</DockPanel>

											<Label Grid.Row="1" Grid.Column="0" Margin="5" MinWidth="100"
												   Content="名前"/>

											<TextBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Margin="5"
													 Text="{Binding Name}"/>

											<Label Grid.Row="2" Grid.Column="0" Margin="5" MinWidth="100"
												   Content="備考"/>

											<TextBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="5"
													 Text="{Binding Remarks}"/>
										</Grid>

										<StackPanel Grid.Column="1" Margin="5,0,0,0">
											<Button Style="{StaticResource CustomButton2Key}"
													Content="r"
													ToolTip="この項目を削除します。"
													Command="{Binding DataContext.DeleteLostSumthingItemCommand, ElementName=MainWindow1}"/>
											<Button Style="{StaticResource CustomButton2Key}"
													Content="t"
													ToolTip="この項目を1つ上に移動します。"
													Command="{Binding DataContext.MoveUpLostSumthingItemCommand, ElementName=MainWindow1}"/>
											<Button Style="{StaticResource CustomButton2Key}"
													Content="u"
													ToolTip="この項目を1つ下に移動します。"
													Command="{Binding DataContext.MoveDownLostSumthingItemCommand, ElementName=MainWindow1}"/>
										</StackPanel>
									</Grid>
								</DataTemplate>
							</ListBox.ItemTemplate>
						</ListBox>

						<StackPanel Grid.Row="0" Grid.Column="1"
									MinWidth="120">
							<Button Grid.Row="0" Margin="5" Padding="5,0"
									Height="50"
									Content="追加(_A)"
									Command="{Binding AddLostSumthingItemCommand}"/>
							<Button Grid.Row="2" Margin="5" Padding="5,0"
									Height="50"
									Content="クリア(_C)"
									Command="{Binding ClearLostSumthingListCommand}"/>
							<Button Grid.Row="2" Margin="5" Padding="5,0"
									Height="50"
									Content="時間順に並べ替え(_S)"
									ToolTip="遺失物情報の項目を時間順に並べ替えます。"
									Command="{Binding SortLostSumthingItemByTimeCommand}"/>
						</StackPanel>
					</Grid>
				</TabItem>

				<!-- 備品の状況 -->
				<TabItem Header="備品状況(_M)">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>

						<TextBlock Grid.Row="0" Margin="5" Padding="5,0"
								   Text="備品状況や点検など"/>

						<TextBox Grid.Row="1" Margin="5"
								 AcceptsReturn="True"
								 VerticalScrollBarVisibility="Auto"
								 TextWrapping="Wrap"
								 Text="{Binding FixtureInfo}"/>
					</Grid>
				</TabItem>

				<!-- 入力フォーム ここまで -->

				<!-- 日報データのプレビュー -->
				<TabItem Header="プレビュー(_R)">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>

						<Grid Grid.Row="0">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>

							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>

							<Label Grid.Row="0" Grid.Column="0" Margin="5" Padding="5,0" MinWidth="100"
								   Content="タイトル"/>

							<TextBox Grid.Row="0" Grid.Column="1" Margin="5"
									 IsReadOnly="True"
									 Text="{Binding DailyReportPreviewTitle, Mode=OneWay}"/>

							<Label Grid.Row="1" Grid.Column="0" Margin="5" Padding="5,0" MinWidth="100"
								   VerticalAlignment="Top"
								   Content="本文プレビュー"/>

							<TextBox Grid.Row="1" Grid.Column="1" Margin="5"
									 HorizontalScrollBarVisibility="Auto"
									 VerticalScrollBarVisibility="Auto"
									 IsReadOnly="True"
									 Text="{Binding DailyReportPreviewContent, Mode=OneWay}"/>
						</Grid>



						<StackPanel Grid.Row="0" Grid.Column="1"
									MinWidth="120">
							<Button Grid.Row="0" Margin="5" Padding="5,0"
									Height="50"
									Content="日報データを生成(_G)"
									ToolTip="フォームに入力した内容から、日報データを作成します。"
									Command="{Binding GenerateDailyReportDataCommand}"/>
							<Button Grid.Row="0" Margin="5" Padding="5,0"
									Height="50"
									Content="本文をコピー(_C)"
									ToolTip="作成した日報データの本文をクリップボードにコピーします。メールの本文にそのままペーストできます。"
									Command="{Binding CopyPreviewContentCommand}"/>
							<Button Grid.Row="2" Margin="5" Padding="5,0"
									Height="50"
									Content="保存(_S)"
									ToolTip="作成した日報データをテキストファイルに保存します。"
									Command="{Binding SaveDailyReportDataCommand}"/>
						</StackPanel>
					</Grid>

				</TabItem>

				<!-- About画面 -->
				<TabItem Header="バージョン情報(_V)">
					<Grid Margin="5">
						<DockPanel Margin="10">
							<Grid Margin="10, 5"
								  DockPanel.Dock="Top">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="120"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Image Grid.Column="0"
										Margin="10"
										VerticalAlignment="Center"
										Source="/DailyReportMaker;component/DRMITA.ico"/>
								<StackPanel Grid.Column="1"
											VerticalAlignment="Center">
									<TextBlock Margin="10, 0"
											   FontSize="32"
											   Text="{Binding AppInfo.ProductName}"/>
									<TextBlock Margin="10, 0"
											   Text="{Binding AppInfo.ProductVersion, StringFormat=Ver. {0}}"/>
								</StackPanel>
							</Grid>

							<TextBlock Margin="10,10,10,0" DockPanel.Dock="Top"
										   Text="本アプリで使用しているライブラリについて"/>
							<Border Margin="10"
									DockPanel.Dock="Bottom"
									BorderThickness="1"
									BorderBrush="{StaticResource CustomNormalLightBrushKey}">
								<ScrollViewer FocusVisualStyle="{x:Null}"
											  HorizontalScrollBarVisibility="Disabled">
									<!--  -->
									<TextBlock Margin="5"
											   TextWrapping="WrapWithOverflow"
											   FocusVisualStyle="{x:Null}">
											◆ 本アプリに含まれるTimePickerコントロール、NumericUpDownコントロールは、"Xceed.Wpf.Toolkit" を使用しています。<LineBreak/>
										　	  Copyright ©1994-2016 Xceed Software Inc.<LineBreak/>
										　	  Released under the Microsoft Public license (Ms-PL)<LineBreak/>
											　 
											<Hyperlink NavigateUri="https://wpftoolkit.codeplex.com/"
													   TargetName="_new"
													   FocusVisualStyle="{x:Null}"
													   RequestNavigate="Hyperlink_RequestNavigate"
													   ToolTip="{Binding NavigateUri.AbsoluteUri, Mode=OneWay, RelativeSource={RelativeSource Self}}">
												https://wpftoolkit.codeplex.com/
											</Hyperlink><LineBreak/><LineBreak/>
										
											◆ 本アプリにおける処理の結果通知に、"Nia-Tech プロリアクトス・レヴ" を使用しています。<LineBreak/>
										　	  Copyright (C) 2016 Nia Tomonaka<LineBreak/>
										　	  Released under the MIT license<LineBreak/>
											　 
											<Hyperlink NavigateUri="https://github.com/Nia-TN1012/ProReactsRev/"
													   TargetName="_new"
													   FocusVisualStyle="{x:Null}"
													   RequestNavigate="Hyperlink_RequestNavigate"
													   ToolTip="{Binding NavigateUri.AbsoluteUri, Mode=OneWay, RelativeSource={RelativeSource Self}}">
												https://github.com/Nia-TN1012/ProReactsRev/
											</Hyperlink>
									</TextBlock>
								</ScrollViewer>
							</Border>
						</DockPanel>
					</Grid>
				</TabItem>

			</TabControl>

			<!-- ステータスバー -->
			<StatusBar Grid.Row="2">
				<Grid>
					<TextBlock Padding="5,0"
							   Text="{Binding StatusInfo.ProgressInfo}"/>
				</Grid>
			</StatusBar>

		</Grid>
	</Border>
</Window>
